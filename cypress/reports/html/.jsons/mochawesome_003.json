{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-04T17:49:01.007Z",
    "end": "2023-11-04T17:49:01.941Z",
    "duration": 934,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ebac9947-709f-4f1e-a20d-ae7cb518f646",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a366bf93-0e26-4956-a22a-721392405b57",
          "title": "Testes de funcionalidade de produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contratpo de produtos",
              "fullTitle": "Testes de funcionalidade de produtos Deve validar contratpo de produtos",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "2ee597d0-b9d4-40bb-887f-1f8bd061bbd6",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar produtos",
              "fullTitle": "Testes de funcionalidade de produtos Listar produtos",
              "timedOut": null,
              "duration": 71,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:3000/produtos'\n}).then(response => {\n  //expect(response.body.produtos[1].nome).to.equal('Logitech MX Vertical')\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(20);\n});",
              "err": {},
              "uuid": "b661ed9b-3fef-462a-96a1-adbbf1105c5d",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cadastrar produto",
              "fullTitle": "Testes de funcionalidade de produtos cadastrar produto",
              "timedOut": null,
              "duration": 55,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `produto Ebac ${Math.floor(Math.random() * 10000)}`;\ncy.request({\n  method: 'POST',\n  url: \"produtos\",\n  body: {\n    \"nome\": produto,\n    \"preco\": 200,\n    \"descricao\": \"produto novo\",\n    \"quantidade\": 100\n  },\n  headers: {\n    Authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "85990995-10b5-4725-92ab-72c4e920cc6e",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Testes de funcionalidade de produtos deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: \"produtos\",\n  body: {\n    \"nome\": \"produto EBAC 5116\",\n    \"preco\": 200,\n    \"descricao\": \"produto novo\",\n    \"quantidade\": 100\n  },\n  failOnStatusCode: false,\n  headers: {\n    Authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "2647744d-70e0-4fb7-8975-9bcece119bfc",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fazer o cadastro com comando customizado",
              "fullTitle": "Testes de funcionalidade de produtos fazer o cadastro com comando customizado",
              "timedOut": null,
              "duration": 60,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"produtinho 1123\", 300, \"produto criado para teste\", 25).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "7dc4d7f0-ec5c-41f2-a0a1-8e9baa0b7764",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve pegar o id de um produto cadastrado",
              "fullTitle": "Testes de funcionalidade de produtos deve pegar o id de um produto cadastrado",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  // cy.log(response.body.produtos[0]._id)\n  let id = response.body.produtos[0]._id;\n  let nome = response.body.produtos[0].nome;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": nome,\n      \"preco\": 470,\n      \"descricao\": \"Mouse\",\n      \"quantidade\": 381\n    }\n  });\n});",
              "err": {},
              "uuid": "3a67048a-2be8-4fc7-b3d2-637d758be459",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um produto cadastrado previamente",
              "fullTitle": "Testes de funcionalidade de produtos deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 1000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'descricao do produto novo', 190).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    failOnStatusCode: false,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 280,\n      \"descricao\": \"descricao do produto novo\",\n      \"quantidade\": 190\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "4eff50de-42cd-41f9-aa2a-1698f24bf54c",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um produto cadastrado previamente",
              "fullTitle": "Testes de funcionalidade de produtos deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 1000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'descricao do produto novo', 190).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    failOnStatusCode: false,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "096e2bf4-6273-45fc-b17a-2a7a259dfad6",
              "parentUUID": "a366bf93-0e26-4956-a22a-721392405b57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ee597d0-b9d4-40bb-887f-1f8bd061bbd6",
            "b661ed9b-3fef-462a-96a1-adbbf1105c5d",
            "85990995-10b5-4725-92ab-72c4e920cc6e",
            "2647744d-70e0-4fb7-8975-9bcece119bfc",
            "7dc4d7f0-ec5c-41f2-a0a1-8e9baa0b7764",
            "3a67048a-2be8-4fc7-b3d2-637d758be459",
            "4eff50de-42cd-41f9-aa2a-1698f24bf54c",
            "096e2bf4-6273-45fc-b17a-2a7a259dfad6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}