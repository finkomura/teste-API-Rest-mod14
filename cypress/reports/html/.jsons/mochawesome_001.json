{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-04T17:42:11.463Z",
    "end": "2023-11-04T17:42:12.313Z",
    "duration": 850,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "80a9e544-bc88-41de-b7e6-335a7a76dc68",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b298a36-6863-4a48-a04d-297db1f7c050",
          "title": "Testes de funcionalidade de produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contratpo de produtos",
              "fullTitle": "Testes de funcionalidade de produtos Deve validar contratpo de produtos",
              "timedOut": null,
              "duration": 125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "99b53ea3-10e0-40fa-8e5c-ee31c9ad85cf",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar produtos",
              "fullTitle": "Testes de funcionalidade de produtos Listar produtos",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'http://localhost:3000/produtos'\n}).then(response => {\n  //expect(response.body.produtos[1].nome).to.equal('Logitech MX Vertical')\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(20);\n});",
              "err": {},
              "uuid": "f030d7c7-0ac0-4017-bffb-719490b59359",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cadastrar produto",
              "fullTitle": "Testes de funcionalidade de produtos cadastrar produto",
              "timedOut": null,
              "duration": 53,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `produto Ebac ${Math.floor(Math.random() * 10000)}`;\ncy.request({\n  method: 'POST',\n  url: \"produtos\",\n  body: {\n    \"nome\": produto,\n    \"preco\": 200,\n    \"descricao\": \"produto novo\",\n    \"quantidade\": 100\n  },\n  headers: {\n    Authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "41a6cd60-89f9-4014-a1c5-b9de0851568c",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Testes de funcionalidade de produtos deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 46,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: \"produtos\",\n  body: {\n    \"nome\": \"produto EBAC 5116\",\n    \"preco\": 200,\n    \"descricao\": \"produto novo\",\n    \"quantidade\": 100\n  },\n  failOnStatusCode: false,\n  headers: {\n    Authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "bdfa7bc4-d9de-4b04-a8a3-89b562c63873",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fazer o cadastro com comando customizado",
              "fullTitle": "Testes de funcionalidade de produtos fazer o cadastro com comando customizado",
              "timedOut": null,
              "duration": 49,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, \"produtinho 1123\", 300, \"produto criado para teste\", 25).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "2ef76964-9f98-4766-861f-7af9653e07aa",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve pegar o id de um produto cadastrado",
              "fullTitle": "Testes de funcionalidade de produtos deve pegar o id de um produto cadastrado",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  // cy.log(response.body.produtos[0]._id)\n  let id = response.body.produtos[0]._id;\n  let nome = response.body.produtos[0].nome;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": nome,\n      \"preco\": 470,\n      \"descricao\": \"Mouse\",\n      \"quantidade\": 381\n    }\n  });\n});",
              "err": {},
              "uuid": "c12e42e9-7876-4cab-b30f-cb6b2256f948",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um produto cadastrado previamente",
              "fullTitle": "Testes de funcionalidade de produtos deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 73,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 1000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'descricao do produto novo', 190).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    failOnStatusCode: false,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 280,\n      \"descricao\": \"descricao do produto novo\",\n      \"quantidade\": 190\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "bfb75a4f-4c96-49f2-8f8a-83eddbf78ff7",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "deve editar um produto cadastrado previamente",
              "fullTitle": "Testes de funcionalidade de produtos deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 69,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 1000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'descricao do produto novo', 190).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    failOnStatusCode: false,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "8c1fedf2-e1d3-4a04-84c1-03079b37e847",
              "parentUUID": "4b298a36-6863-4a48-a04d-297db1f7c050",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99b53ea3-10e0-40fa-8e5c-ee31c9ad85cf",
            "f030d7c7-0ac0-4017-bffb-719490b59359",
            "41a6cd60-89f9-4014-a1c5-b9de0851568c",
            "bdfa7bc4-d9de-4b04-a8a3-89b562c63873",
            "2ef76964-9f98-4766-861f-7af9653e07aa",
            "c12e42e9-7876-4cab-b30f-cb6b2256f948",
            "bfb75a4f-4c96-49f2-8f8a-83eddbf78ff7",
            "8c1fedf2-e1d3-4a04-84c1-03079b37e847"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 567,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\html\\.jsons"
      },
      "version": "6.2.0"
    }
  }
}